digraph AST {
4 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r0\nreg: r0\ntype: int"];
3 [shape=box, label="Return\ncode: \nloadI 0 => r0\ni2i r0 => RET"];
3 -> 4;
2 [shape=box, label="Block\ncode: \nloadI 0 => r0\ni2i r0 => RET\njump l0\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 0 => r0\ni2i r0 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
1 -> 2;
8 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r1\nreg: r1\ntype: int"];
7 [shape=box, label="Return\ncode: \nloadI 2 => r1\ni2i r1 => RET"];
7 -> 8;
6 [shape=box, label="Block\ncode: \nloadI 2 => r1\ni2i r1 => RET\njump l1\nsymbolTable: (empty)"];
6 -> 7;
5 [shape=box, label="FuncDecl name='foo'\ncode: \nfoo:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r1\ni2i r1 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
5 -> 6;
12 [shape=box, label="Literal value=6\ncode: \nloadI 6 => r2\nreg: r2\ntype: int"];
11 [shape=box, label="Return\ncode: \nloadI 6 => r2\ni2i r2 => RET"];
11 -> 12;
10 [shape=box, label="Block\ncode: \nloadI 6 => r2\ni2i r2 => RET\njump l2\nsymbolTable: (empty)"];
10 -> 11;
9 [shape=box, label="FuncDecl name='bar'\ncode: \nbar:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 6 => r2\ni2i r2 => RET\njump l2\nl2:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
9 -> 10;
0 [shape=box, label="Program\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 0 => r0\ni2i r0 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nfoo:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r1\ni2i r1 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nbar:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 6 => r2\ni2i r2 => RET\njump l2\nl2:\ni2i BP => SP\npop BP\nreturn\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int\n  foo : () -> int\n  bar : () -> int"];
0 -> 1;
0 -> 5;
0 -> 9;
}
