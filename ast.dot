digraph AST {
3 [shape=box, label="VarDecl name='a'"];
4 [shape=box, label="VarDecl name='c'"];
5 [shape=box, label="VarDecl name='d'"];
6 [shape=box, label="VarDecl name='b'"];
8 [shape=box, label="Location name='a'\ntype: int"];
9 [shape=box, label="Literal value=2\nreg: r0\ncode: \nloadI 2 => r0\ntype: int"];
7 [shape=box, label="Assignment\ncode: \nloadI 2 => r0\nstoreAI r0 => [BP-8]"];
7 -> 8;
7 -> 9;
11 [shape=box, label="Location name='b'\ntype: bool"];
12 [shape=box, label="Literal value=true\nreg: r1\ncode: \nloadI 1 => r1\ntype: bool"];
10 [shape=box, label="Assignment\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-32]"];
10 -> 11;
10 -> 12;
14 [shape=box, label="Location name='b'\ntype: bool"];
15 [shape=box, label="Literal value=false\nreg: r2\ncode: \nloadI 0 => r2\ntype: bool"];
13 [shape=box, label="Assignment\ncode: \nloadI 0 => r2\nstoreAI r2 => [BP-32]"];
13 -> 14;
13 -> 15;
17 [shape=box, label="Location name='a'\ntype: int"];
18 [shape=box, label="Literal value=3\nreg: r3\ncode: \nloadI 3 => r3\ntype: int"];
16 [shape=box, label="Assignment\ncode: \nloadI 3 => r3\nstoreAI r3 => [BP-8]"];
16 -> 17;
16 -> 18;
20 [shape=box, label="Location name='a'\nreg: r6\ntype: int"];
22 [shape=box, label="Literal value=2\nreg: r4\ncode: \nloadI 2 => r4\ntype: int"];
23 [shape=box, label="Literal value=3\nreg: r5\ncode: \nloadI 3 => r5\ntype: int"];
21 [shape=box, label="BinaryOp op='+'\nreg: r6\ncode: \nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\ntype: int"];
21 -> 22;
21 -> 23;
19 [shape=box, label="Assignment\ncode: \nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]"];
19 -> 20;
19 -> 21;
25 [shape=box, label="Location name='a'\nreg: r7\ntype: int"];
26 [shape=box, label="Location name='a'\nreg: r7\ntype: int"];
24 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]"];
24 -> 25;
24 -> 26;
28 [shape=box, label="Location name='c'\nreg: r8\ntype: int"];
29 [shape=box, label="Location name='a'\nreg: r8\ntype: int"];
27 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]"];
27 -> 28;
27 -> 29;
31 [shape=box, label="Location name='a'\nreg: r10\ntype: int"];
33 [shape=box, label="Location name='c'\ntype: int"];
34 [shape=box, label="Literal value=2\nreg: r9\ncode: \nloadI 2 => r9\ntype: int"];
32 [shape=box, label="BinaryOp op='+'\nreg: r10\ncode: \nloadI 2 => r9\nadd r-1, r9 => r10\ntype: int"];
32 -> 33;
32 -> 34;
30 [shape=box, label="Assignment\ncode: \nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]"];
30 -> 31;
30 -> 32;
36 [shape=box, label="Location name='b'\nreg: r13\ntype: bool"];
38 [shape=box, label="Literal value=true\nreg: r11\ncode: \nloadI 1 => r11\ntype: bool"];
39 [shape=box, label="Literal value=false\nreg: r12\ncode: \nloadI 0 => r12\ntype: bool"];
37 [shape=box, label="BinaryOp op='||'\nreg: r13\ncode: \nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\ntype: bool"];
37 -> 38;
37 -> 39;
35 [shape=box, label="Assignment\ncode: \nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-32]"];
35 -> 36;
35 -> 37;
41 [shape=box, label="Location name='d'\nreg: r14\ntype: int"];
43 [shape=box, label="Location name='a'\ntype: int"];
44 [shape=box, label="Location name='c'\ntype: int"];
42 [shape=box, label="BinaryOp op='+'\nreg: r14\ncode: \nadd r-1, r-1 => r14\ntype: int"];
42 -> 43;
42 -> 44;
40 [shape=box, label="Assignment\ncode: \nadd r-1, r-1 => r14\nstoreAI r14 => [BP-24]"];
40 -> 41;
40 -> 42;
46 [shape=box, label="Location name='a'\ntype: int"];
45 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r-1\ni2i r-1 => RET"];
45 -> 46;
2 [shape=box, label="Block\ncode: \nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-32]\nloadI 0 => r2\nstoreAI r2 => [BP-32]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-32]\nadd r-1, r-1 => r14\nstoreAI r14 => [BP-24]\nloadAI [BP-8] => r-1\ni2i r-1 => RET\njump l0\nsymbolTable: \n  a : int {stack offset=-8}\n  c : int {stack offset=-16}\n  d : int {stack offset=-24}\n  b : bool {stack offset=-32}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 6;
2 -> 7;
2 -> 10;
2 -> 13;
2 -> 16;
2 -> 19;
2 -> 24;
2 -> 27;
2 -> 30;
2 -> 35;
2 -> 40;
2 -> 45;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-32]\nloadI 0 => r2\nstoreAI r2 => [BP-32]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-32]\nadd r-1, r-1 => r14\nstoreAI r14 => [BP-24]\nloadAI [BP-8] => r-1\ni2i r-1 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 32\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-32]\nloadI 0 => r2\nstoreAI r2 => [BP-32]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-32]\nadd r-1, r-1 => r14\nstoreAI r14 => [BP-24]\nloadAI [BP-8] => r-1\ni2i r-1 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
