digraph AST {
3 [shape=box, label="VarDecl name='a'"];
4 [shape=box, label="VarDecl name='c'"];
5 [shape=box, label="VarDecl name='b'"];
7 [shape=box, label="Location name='a'\ntype: int"];
8 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r0\nreg: r0\ntype: int"];
6 [shape=box, label="Assignment\ncode: \nloadI 2 => r0\nstoreAI r0 => [BP-8]"];
6 -> 7;
6 -> 8;
10 [shape=box, label="Location name='b'\ntype: bool"];
11 [shape=box, label="Literal value=true\ncode: \nloadI 1 => r1\nreg: r1\ntype: bool"];
9 [shape=box, label="Assignment\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-24]"];
9 -> 10;
9 -> 11;
13 [shape=box, label="Location name='b'\ntype: bool"];
14 [shape=box, label="Literal value=false\ncode: \nloadI 0 => r2\nreg: r2\ntype: bool"];
12 [shape=box, label="Assignment\ncode: \nloadI 0 => r2\nstoreAI r2 => [BP-24]"];
12 -> 13;
12 -> 14;
16 [shape=box, label="Location name='a'\ntype: int"];
17 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r3\nreg: r3\ntype: int"];
15 [shape=box, label="Assignment\ncode: \nloadI 3 => r3\nstoreAI r3 => [BP-8]"];
15 -> 16;
15 -> 17;
19 [shape=box, label="Location name='a'\ntype: int"];
21 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r4\nreg: r4\ntype: int"];
22 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r5\nreg: r5\ntype: int"];
20 [shape=box, label="BinaryOp op='+'\nreg: r6\ncode: \nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\ntype: int"];
20 -> 21;
20 -> 22;
18 [shape=box, label="Assignment\ncode: \nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]"];
18 -> 19;
18 -> 20;
24 [shape=box, label="Location name='a'\nreg: r7\ntype: int"];
25 [shape=box, label="Location name='a'\nreg: r7\ntype: int"];
23 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]"];
23 -> 24;
23 -> 25;
27 [shape=box, label="Location name='c'\nreg: r8\ntype: int"];
28 [shape=box, label="Location name='a'\nreg: r8\ntype: int"];
26 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]"];
26 -> 27;
26 -> 28;
30 [shape=box, label="Location name='a'\ntype: int"];
32 [shape=box, label="Location name='c'\ntype: int"];
33 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r9\nreg: r9\ntype: int"];
31 [shape=box, label="BinaryOp op='+'\nreg: r10\ncode: \nloadI 2 => r9\nadd r-1, r9 => r10\ntype: int"];
31 -> 32;
31 -> 33;
29 [shape=box, label="Assignment\ncode: \nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]"];
29 -> 30;
29 -> 31;
35 [shape=box, label="Location name='b'\ntype: bool"];
37 [shape=box, label="Literal value=true\ncode: \nloadI 1 => r11\nreg: r11\ntype: bool"];
38 [shape=box, label="Literal value=false\ncode: \nloadI 0 => r12\nreg: r12\ntype: bool"];
36 [shape=box, label="BinaryOp op='||'\nreg: r13\ncode: \nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\ntype: bool"];
36 -> 37;
36 -> 38;
34 [shape=box, label="Assignment\ncode: \nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-24]"];
34 -> 35;
34 -> 36;
40 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r14\nreg: r14\ntype: int"];
39 [shape=box, label="Return\ncode: \nloadI 1 => r14\ni2i r14 => RET"];
39 -> 40;
2 [shape=box, label="Block\ncode: \nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-24]\nloadI 0 => r2\nstoreAI r2 => [BP-24]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-24]\nloadI 1 => r14\ni2i r14 => RET\njump l0\nsymbolTable: \n  a : int {stack offset=-8}\n  c : int {stack offset=-16}\n  b : bool {stack offset=-24}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 6;
2 -> 9;
2 -> 12;
2 -> 15;
2 -> 18;
2 -> 23;
2 -> 26;
2 -> 29;
2 -> 34;
2 -> 39;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-24]\nloadI 0 => r2\nstoreAI r2 => [BP-24]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-24]\nloadI 1 => r14\ni2i r14 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 24\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r0\nstoreAI r0 => [BP-8]\nloadI 1 => r1\nstoreAI r1 => [BP-24]\nloadI 0 => r2\nstoreAI r2 => [BP-24]\nloadI 3 => r3\nstoreAI r3 => [BP-8]\nloadI 2 => r4\nloadI 3 => r5\nadd r4, r5 => r6\nstoreAI r6 => [BP-8]\nloadAI [BP-8] => r7\nstoreAI r7 => [BP-8]\nloadAI [BP-8] => r8\nstoreAI r8 => [BP-16]\nloadI 2 => r9\nadd r-1, r9 => r10\nstoreAI r10 => [BP-8]\nloadI 1 => r11\nloadI 0 => r12\nor r11, r12 => r13\nstoreAI r13 => [BP-24]\nloadI 1 => r14\ni2i r14 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
